function obj = ExpressionTree(varargin)

  % One input argument auto detects what to do
  switch nargin
  case 1
    switch class(varargin{1})
    case 'ExpressionTree'
      obj = varargin{1};
      return;

    case 'double'
      s = struct(...
        'type', 'CONSTANT', ...
        'left', varargin{1}, ...
        'right', [], ...
        'isSimple', true, ...
        'isBinary', false, ...
        'isUnary', false);

    case 'char'
      s = struct(...
        'type', 'VARIABLE', ...
        'left', varargin{1}, ...
        'right', [], ...
        'isSimple', true, ...
        'isBinary', false, ...
        'isUnary', false);
    otherwise
      error('Unsupported data type.');
    end % switch

  % Two input arguments assumes unary operator with (type, operand)
  case 2
    s = struct(...
      'type', varargin{1}, ...
      'left', varargin{2}, ...
      'right', [], ...
      'isSimple', false, ...
      'isBinary', false, ...
      'isUnary', true);

  % Three input arguments assumes binary operator with (type, left, right)
  case 3
    s = struct(...
      'type', varargin{1}, ...
      'left', varargin{2}, ...
      'right', varargin{3}, ...
      'isSimple', false, ...
      'isBinary', true, ...
      'isUnary', false);
  otherwise
    error('Invalid number of input arguments.');
  end % switch

  obj = class(s, 'ExpressionTree');
end % ExpressionTree
